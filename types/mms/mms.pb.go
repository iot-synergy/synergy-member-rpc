// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v3.19.4
// source: mms.proto

package mms

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MemberRegisterReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username"`
	Email    string `protobuf:"bytes,2,opt,name=email,proto3" json:"email"`
	Password string `protobuf:"bytes,3,opt,name=password,proto3" json:"password"`
}

func (x *MemberRegisterReq) Reset() {
	*x = MemberRegisterReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mms_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemberRegisterReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemberRegisterReq) ProtoMessage() {}

func (x *MemberRegisterReq) ProtoReflect() protoreflect.Message {
	mi := &file_mms_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemberRegisterReq.ProtoReflect.Descriptor instead.
func (*MemberRegisterReq) Descriptor() ([]byte, []int) {
	return file_mms_proto_rawDescGZIP(), []int{0}
}

func (x *MemberRegisterReq) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *MemberRegisterReq) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *MemberRegisterReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type SyncMemberResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code          int64         `protobuf:"varint,1,opt,name=code,proto3" json:"code"`
	Msg           string        `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg"`
	Total         uint64        `protobuf:"varint,3,opt,name=total,proto3" json:"total"`
	Data          []*MemberInfo `protobuf:"bytes,4,rep,name=data,proto3" json:"data"`
	NextPageToken string        `protobuf:"bytes,5,opt,name=nextPageToken,proto3" json:"nextPageToken"`
}

func (x *SyncMemberResp) Reset() {
	*x = SyncMemberResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mms_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncMemberResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncMemberResp) ProtoMessage() {}

func (x *SyncMemberResp) ProtoReflect() protoreflect.Message {
	mi := &file_mms_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncMemberResp.ProtoReflect.Descriptor instead.
func (*SyncMemberResp) Descriptor() ([]byte, []int) {
	return file_mms_proto_rawDescGZIP(), []int{1}
}

func (x *SyncMemberResp) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SyncMemberResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *SyncMemberResp) GetTotal() uint64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *SyncMemberResp) GetData() []*MemberInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *SyncMemberResp) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type OauthProviderListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page     uint64  `protobuf:"varint,1,opt,name=page,proto3" json:"page"`
	PageSize uint64  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size"`
	Name     *string `protobuf:"bytes,3,opt,name=name,proto3,oneof" json:"name"`
}

func (x *OauthProviderListReq) Reset() {
	*x = OauthProviderListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mms_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OauthProviderListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OauthProviderListReq) ProtoMessage() {}

func (x *OauthProviderListReq) ProtoReflect() protoreflect.Message {
	mi := &file_mms_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OauthProviderListReq.ProtoReflect.Descriptor instead.
func (*OauthProviderListReq) Descriptor() ([]byte, []int) {
	return file_mms_proto_rawDescGZIP(), []int{2}
}

func (x *OauthProviderListReq) GetPage() uint64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *OauthProviderListReq) GetPageSize() uint64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *OauthProviderListReq) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type TokenInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        *string `protobuf:"bytes,1,opt,name=id,proto3,oneof" json:"id"`
	CreatedAt *int64  `protobuf:"varint,2,opt,name=created_at,json=createdAt,proto3,oneof" json:"created_at"`
	UpdatedAt *int64  `protobuf:"varint,3,opt,name=updated_at,json=updatedAt,proto3,oneof" json:"updated_at"`
	Status    *uint32 `protobuf:"varint,4,opt,name=status,proto3,oneof" json:"status"`
	Uuid      *string `protobuf:"bytes,5,opt,name=uuid,proto3,oneof" json:"uuid"`
	Token     *string `protobuf:"bytes,6,opt,name=token,proto3,oneof" json:"token"`
	Source    *string `protobuf:"bytes,7,opt,name=source,proto3,oneof" json:"source"`
	ExpiredAt *int64  `protobuf:"varint,8,opt,name=expired_at,json=expiredAt,proto3,oneof" json:"expired_at"`
	Username  *string `protobuf:"bytes,9,opt,name=username,proto3,oneof" json:"username"`
}

func (x *TokenInfo) Reset() {
	*x = TokenInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mms_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TokenInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenInfo) ProtoMessage() {}

func (x *TokenInfo) ProtoReflect() protoreflect.Message {
	mi := &file_mms_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenInfo.ProtoReflect.Descriptor instead.
func (*TokenInfo) Descriptor() ([]byte, []int) {
	return file_mms_proto_rawDescGZIP(), []int{3}
}

func (x *TokenInfo) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *TokenInfo) GetCreatedAt() int64 {
	if x != nil && x.CreatedAt != nil {
		return *x.CreatedAt
	}
	return 0
}

func (x *TokenInfo) GetUpdatedAt() int64 {
	if x != nil && x.UpdatedAt != nil {
		return *x.UpdatedAt
	}
	return 0
}

func (x *TokenInfo) GetStatus() uint32 {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return 0
}

func (x *TokenInfo) GetUuid() string {
	if x != nil && x.Uuid != nil {
		return *x.Uuid
	}
	return ""
}

func (x *TokenInfo) GetToken() string {
	if x != nil && x.Token != nil {
		return *x.Token
	}
	return ""
}

func (x *TokenInfo) GetSource() string {
	if x != nil && x.Source != nil {
		return *x.Source
	}
	return ""
}

func (x *TokenInfo) GetExpiredAt() int64 {
	if x != nil && x.ExpiredAt != nil {
		return *x.ExpiredAt
	}
	return 0
}

func (x *TokenInfo) GetUsername() string {
	if x != nil && x.Username != nil {
		return *x.Username
	}
	return ""
}

type BaseResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msg string `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg"`
}

func (x *BaseResp) Reset() {
	*x = BaseResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mms_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BaseResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaseResp) ProtoMessage() {}

func (x *BaseResp) ProtoReflect() protoreflect.Message {
	mi := &file_mms_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaseResp.ProtoReflect.Descriptor instead.
func (*BaseResp) Descriptor() ([]byte, []int) {
	return file_mms_proto_rawDescGZIP(), []int{4}
}

func (x *BaseResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type CommentListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int64            `protobuf:"varint,1,opt,name=code,proto3" json:"code"`
	Msg  string           `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg"`
	Data *CommentListData `protobuf:"bytes,3,opt,name=data,proto3,oneof" json:"data"`
}

func (x *CommentListResp) Reset() {
	*x = CommentListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mms_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommentListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommentListResp) ProtoMessage() {}

func (x *CommentListResp) ProtoReflect() protoreflect.Message {
	mi := &file_mms_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommentListResp.ProtoReflect.Descriptor instead.
func (*CommentListResp) Descriptor() ([]byte, []int) {
	return file_mms_proto_rawDescGZIP(), []int{5}
}

func (x *CommentListResp) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CommentListResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *CommentListResp) GetData() *CommentListData {
	if x != nil {
		return x.Data
	}
	return nil
}

type UUIDReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
}

func (x *UUIDReq) Reset() {
	*x = UUIDReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mms_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UUIDReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UUIDReq) ProtoMessage() {}

func (x *UUIDReq) ProtoReflect() protoreflect.Message {
	mi := &file_mms_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UUIDReq.ProtoReflect.Descriptor instead.
func (*UUIDReq) Descriptor() ([]byte, []int) {
	return file_mms_proto_rawDescGZIP(), []int{6}
}

func (x *UUIDReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type BaseIDResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id  uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	Msg string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg"`
}

func (x *BaseIDResp) Reset() {
	*x = BaseIDResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mms_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BaseIDResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaseIDResp) ProtoMessage() {}

func (x *BaseIDResp) ProtoReflect() protoreflect.Message {
	mi := &file_mms_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaseIDResp.ProtoReflect.Descriptor instead.
func (*BaseIDResp) Descriptor() ([]byte, []int) {
	return file_mms_proto_rawDescGZIP(), []int{7}
}

func (x *BaseIDResp) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *BaseIDResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type ReplyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AdminId  *string `protobuf:"bytes,1,opt,name=adminId,proto3,oneof" json:"adminId"`
	Page     *int64  `protobuf:"varint,2,opt,name=page,proto3,oneof" json:"page"`
	PageSize *int64  `protobuf:"varint,3,opt,name=pageSize,proto3,oneof" json:"pageSize"`
	Reply    *string `protobuf:"bytes,4,opt,name=reply,proto3,oneof" json:"reply"`
}

func (x *ReplyReq) Reset() {
	*x = ReplyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mms_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplyReq) ProtoMessage() {}

func (x *ReplyReq) ProtoReflect() protoreflect.Message {
	mi := &file_mms_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplyReq.ProtoReflect.Descriptor instead.
func (*ReplyReq) Descriptor() ([]byte, []int) {
	return file_mms_proto_rawDescGZIP(), []int{8}
}

func (x *ReplyReq) GetAdminId() string {
	if x != nil && x.AdminId != nil {
		return *x.AdminId
	}
	return ""
}

func (x *ReplyReq) GetPage() int64 {
	if x != nil && x.Page != nil {
		return *x.Page
	}
	return 0
}

func (x *ReplyReq) GetPageSize() int64 {
	if x != nil && x.PageSize != nil {
		return *x.PageSize
	}
	return 0
}

func (x *ReplyReq) GetReply() string {
	if x != nil && x.Reply != nil {
		return *x.Reply
	}
	return ""
}

type MemberLoginResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
	Nickname string `protobuf:"bytes,2,opt,name=nickname,proto3" json:"nickname"`
	Avatar   string `protobuf:"bytes,3,opt,name=avatar,proto3" json:"avatar"`
	RankId   uint64 `protobuf:"varint,4,opt,name=rank_id,json=rankId,proto3" json:"rank_id"`
}

func (x *MemberLoginResp) Reset() {
	*x = MemberLoginResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mms_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemberLoginResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemberLoginResp) ProtoMessage() {}

func (x *MemberLoginResp) ProtoReflect() protoreflect.Message {
	mi := &file_mms_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemberLoginResp.ProtoReflect.Descriptor instead.
func (*MemberLoginResp) Descriptor() ([]byte, []int) {
	return file_mms_proto_rawDescGZIP(), []int{9}
}

func (x *MemberLoginResp) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *MemberLoginResp) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *MemberLoginResp) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *MemberLoginResp) GetRankId() uint64 {
	if x != nil {
		return x.RankId
	}
	return 0
}

type SyncMemberReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Size          int64  `protobuf:"varint,1,opt,name=size,proto3" json:"size"`
	NextPageToken string `protobuf:"bytes,2,opt,name=nextPageToken,proto3" json:"nextPageToken"`
}

func (x *SyncMemberReq) Reset() {
	*x = SyncMemberReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mms_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncMemberReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncMemberReq) ProtoMessage() {}

func (x *SyncMemberReq) ProtoReflect() protoreflect.Message {
	mi := &file_mms_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncMemberReq.ProtoReflect.Descriptor instead.
func (*SyncMemberReq) Descriptor() ([]byte, []int) {
	return file_mms_proto_rawDescGZIP(), []int{10}
}

func (x *SyncMemberReq) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *SyncMemberReq) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type MemberRankInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          *uint64 `protobuf:"varint,1,opt,name=id,proto3,oneof" json:"id"`
	CreatedAt   *int64  `protobuf:"varint,2,opt,name=created_at,json=createdAt,proto3,oneof" json:"created_at"`
	UpdatedAt   *int64  `protobuf:"varint,3,opt,name=updated_at,json=updatedAt,proto3,oneof" json:"updated_at"`
	Name        *string `protobuf:"bytes,4,opt,name=name,proto3,oneof" json:"name"`
	Description *string `protobuf:"bytes,5,opt,name=description,proto3,oneof" json:"description"`
	Remark      *string `protobuf:"bytes,6,opt,name=remark,proto3,oneof" json:"remark"`
	Code        *string `protobuf:"bytes,7,opt,name=code,proto3,oneof" json:"code"`
}

func (x *MemberRankInfo) Reset() {
	*x = MemberRankInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mms_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemberRankInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemberRankInfo) ProtoMessage() {}

func (x *MemberRankInfo) ProtoReflect() protoreflect.Message {
	mi := &file_mms_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemberRankInfo.ProtoReflect.Descriptor instead.
func (*MemberRankInfo) Descriptor() ([]byte, []int) {
	return file_mms_proto_rawDescGZIP(), []int{11}
}

func (x *MemberRankInfo) GetId() uint64 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *MemberRankInfo) GetCreatedAt() int64 {
	if x != nil && x.CreatedAt != nil {
		return *x.CreatedAt
	}
	return 0
}

func (x *MemberRankInfo) GetUpdatedAt() int64 {
	if x != nil && x.UpdatedAt != nil {
		return *x.UpdatedAt
	}
	return 0
}

func (x *MemberRankInfo) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *MemberRankInfo) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *MemberRankInfo) GetRemark() string {
	if x != nil && x.Remark != nil {
		return *x.Remark
	}
	return ""
}

func (x *MemberRankInfo) GetCode() string {
	if x != nil && x.Code != nil {
		return *x.Code
	}
	return ""
}

type IDsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []uint64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids"`
}

func (x *IDsReq) Reset() {
	*x = IDsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mms_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IDsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IDsReq) ProtoMessage() {}

func (x *IDsReq) ProtoReflect() protoreflect.Message {
	mi := &file_mms_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IDsReq.ProtoReflect.Descriptor instead.
func (*IDsReq) Descriptor() ([]byte, []int) {
	return file_mms_proto_rawDescGZIP(), []int{12}
}

func (x *IDsReq) GetIds() []uint64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type UUIDsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []string `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids"`
}

func (x *UUIDsReq) Reset() {
	*x = UUIDsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mms_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UUIDsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UUIDsReq) ProtoMessage() {}

func (x *UUIDsReq) ProtoReflect() protoreflect.Message {
	mi := &file_mms_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UUIDsReq.ProtoReflect.Descriptor instead.
func (*UUIDsReq) Descriptor() ([]byte, []int) {
	return file_mms_proto_rawDescGZIP(), []int{13}
}

func (x *UUIDsReq) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

type MemberRankListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total uint64            `protobuf:"varint,1,opt,name=total,proto3" json:"total"`
	Data  []*MemberRankInfo `protobuf:"bytes,2,rep,name=data,proto3" json:"data"`
}

func (x *MemberRankListResp) Reset() {
	*x = MemberRankListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mms_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemberRankListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemberRankListResp) ProtoMessage() {}

func (x *MemberRankListResp) ProtoReflect() protoreflect.Message {
	mi := &file_mms_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemberRankListResp.ProtoReflect.Descriptor instead.
func (*MemberRankListResp) Descriptor() ([]byte, []int) {
	return file_mms_proto_rawDescGZIP(), []int{14}
}

func (x *MemberRankListResp) GetTotal() uint64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *MemberRankListResp) GetData() []*MemberRankInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

type UpdateMember2Resp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int64  `protobuf:"varint,1,opt,name=code,proto3" json:"code"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg"`
	Data bool   `protobuf:"varint,3,opt,name=data,proto3" json:"data"`
}

func (x *UpdateMember2Resp) Reset() {
	*x = UpdateMember2Resp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mms_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMember2Resp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMember2Resp) ProtoMessage() {}

func (x *UpdateMember2Resp) ProtoReflect() protoreflect.Message {
	mi := &file_mms_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMember2Resp.ProtoReflect.Descriptor instead.
func (*UpdateMember2Resp) Descriptor() ([]byte, []int) {
	return file_mms_proto_rawDescGZIP(), []int{15}
}

func (x *UpdateMember2Resp) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *UpdateMember2Resp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *UpdateMember2Resp) GetData() bool {
	if x != nil {
		return x.Data
	}
	return false
}

type MemberRankListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page        uint64  `protobuf:"varint,1,opt,name=page,proto3" json:"page"`
	PageSize    uint64  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size"`
	Name        *string `protobuf:"bytes,3,opt,name=name,proto3,oneof" json:"name"`
	Description *string `protobuf:"bytes,4,opt,name=description,proto3,oneof" json:"description"`
	Remark      *string `protobuf:"bytes,5,opt,name=remark,proto3,oneof" json:"remark"`
}

func (x *MemberRankListReq) Reset() {
	*x = MemberRankListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mms_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemberRankListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemberRankListReq) ProtoMessage() {}

func (x *MemberRankListReq) ProtoReflect() protoreflect.Message {
	mi := &file_mms_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemberRankListReq.ProtoReflect.Descriptor instead.
func (*MemberRankListReq) Descriptor() ([]byte, []int) {
	return file_mms_proto_rawDescGZIP(), []int{16}
}

func (x *MemberRankListReq) GetPage() uint64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *MemberRankListReq) GetPageSize() uint64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *MemberRankListReq) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *MemberRankListReq) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *MemberRankListReq) GetRemark() string {
	if x != nil && x.Remark != nil {
		return *x.Remark
	}
	return ""
}

type OauthRedirectResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url"`
}

func (x *OauthRedirectResp) Reset() {
	*x = OauthRedirectResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mms_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OauthRedirectResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OauthRedirectResp) ProtoMessage() {}

func (x *OauthRedirectResp) ProtoReflect() protoreflect.Message {
	mi := &file_mms_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OauthRedirectResp.ProtoReflect.Descriptor instead.
func (*OauthRedirectResp) Descriptor() ([]byte, []int) {
	return file_mms_proto_rawDescGZIP(), []int{17}
}

func (x *OauthRedirectResp) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type TokenListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total uint64       `protobuf:"varint,1,opt,name=total,proto3" json:"total"`
	Data  []*TokenInfo `protobuf:"bytes,2,rep,name=data,proto3" json:"data"`
}

func (x *TokenListResp) Reset() {
	*x = TokenListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mms_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TokenListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenListResp) ProtoMessage() {}

func (x *TokenListResp) ProtoReflect() protoreflect.Message {
	mi := &file_mms_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenListResp.ProtoReflect.Descriptor instead.
func (*TokenListResp) Descriptor() ([]byte, []int) {
	return file_mms_proto_rawDescGZIP(), []int{18}
}

func (x *TokenListResp) GetTotal() uint64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *TokenListResp) GetData() []*TokenInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

type MemberListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total uint64        `protobuf:"varint,1,opt,name=total,proto3" json:"total"`
	Data  []*MemberInfo `protobuf:"bytes,2,rep,name=data,proto3" json:"data"`
}

func (x *MemberListResp) Reset() {
	*x = MemberListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mms_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemberListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemberListResp) ProtoMessage() {}

func (x *MemberListResp) ProtoReflect() protoreflect.Message {
	mi := &file_mms_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemberListResp.ProtoReflect.Descriptor instead.
func (*MemberListResp) Descriptor() ([]byte, []int) {
	return file_mms_proto_rawDescGZIP(), []int{19}
}

func (x *MemberListResp) GetTotal() uint64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *MemberListResp) GetData() []*MemberInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

type MemberListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page     uint64  `protobuf:"varint,1,opt,name=page,proto3" json:"page"`
	PageSize uint64  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size"`
	Username *string `protobuf:"bytes,3,opt,name=username,proto3,oneof" json:"username"`
	Nickname *string `protobuf:"bytes,4,opt,name=nickname,proto3,oneof" json:"nickname"`
	Mobile   *string `protobuf:"bytes,5,opt,name=mobile,proto3,oneof" json:"mobile"`
	Email    *string `protobuf:"bytes,6,opt,name=email,proto3,oneof" json:"email"`
	RankId   *uint64 `protobuf:"varint,7,opt,name=rank_id,json=rankId,proto3,oneof" json:"rank_id"`
	WechatId *string `protobuf:"bytes,8,opt,name=wechat_id,json=wechatId,proto3,oneof" json:"wechat_id"`
}

func (x *MemberListReq) Reset() {
	*x = MemberListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mms_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemberListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemberListReq) ProtoMessage() {}

func (x *MemberListReq) ProtoReflect() protoreflect.Message {
	mi := &file_mms_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemberListReq.ProtoReflect.Descriptor instead.
func (*MemberListReq) Descriptor() ([]byte, []int) {
	return file_mms_proto_rawDescGZIP(), []int{20}
}

func (x *MemberListReq) GetPage() uint64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *MemberListReq) GetPageSize() uint64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *MemberListReq) GetUsername() string {
	if x != nil && x.Username != nil {
		return *x.Username
	}
	return ""
}

func (x *MemberListReq) GetNickname() string {
	if x != nil && x.Nickname != nil {
		return *x.Nickname
	}
	return ""
}

func (x *MemberListReq) GetMobile() string {
	if x != nil && x.Mobile != nil {
		return *x.Mobile
	}
	return ""
}

func (x *MemberListReq) GetEmail() string {
	if x != nil && x.Email != nil {
		return *x.Email
	}
	return ""
}

func (x *MemberListReq) GetRankId() uint64 {
	if x != nil && x.RankId != nil {
		return *x.RankId
	}
	return 0
}

func (x *MemberListReq) GetWechatId() string {
	if x != nil && x.WechatId != nil {
		return *x.WechatId
	}
	return ""
}

type CommentListData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data  []*CommentInfo `protobuf:"bytes,1,rep,name=data,proto3" json:"data"`
	Total int64          `protobuf:"varint,2,opt,name=total,proto3" json:"total"`
}

func (x *CommentListData) Reset() {
	*x = CommentListData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mms_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommentListData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommentListData) ProtoMessage() {}

func (x *CommentListData) ProtoReflect() protoreflect.Message {
	mi := &file_mms_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommentListData.ProtoReflect.Descriptor instead.
func (*CommentListData) Descriptor() ([]byte, []int) {
	return file_mms_proto_rawDescGZIP(), []int{21}
}

func (x *CommentListData) GetData() []*CommentInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *CommentListData) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type ReplyList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReplyList []*ReplyInfo `protobuf:"bytes,1,rep,name=replyList,proto3" json:"replyList"`
	Count     *int64       `protobuf:"varint,2,opt,name=count,proto3,oneof" json:"count"`
}

func (x *ReplyList) Reset() {
	*x = ReplyList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mms_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplyList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplyList) ProtoMessage() {}

func (x *ReplyList) ProtoReflect() protoreflect.Message {
	mi := &file_mms_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplyList.ProtoReflect.Descriptor instead.
func (*ReplyList) Descriptor() ([]byte, []int) {
	return file_mms_proto_rawDescGZIP(), []int{22}
}

func (x *ReplyList) GetReplyList() []*ReplyInfo {
	if x != nil {
		return x.ReplyList
	}
	return nil
}

func (x *ReplyList) GetCount() int64 {
	if x != nil && x.Count != nil {
		return *x.Count
	}
	return 0
}

type CommentListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsReply     *int32  `protobuf:"varint,1,opt,name=isReply,proto3,oneof" json:"isReply"`
	Page        *int64  `protobuf:"varint,2,opt,name=page,proto3,oneof" json:"page"`
	PageSize    *int64  `protobuf:"varint,3,opt,name=pageSize,proto3,oneof" json:"pageSize"`
	Title       *string `protobuf:"bytes,4,opt,name=title,proto3,oneof" json:"title"`
	Content     *string `protobuf:"bytes,5,opt,name=content,proto3,oneof" json:"content"`
	CommentTime []int64 `protobuf:"varint,6,rep,packed,name=commentTime,proto3" json:"commentTime"`
}

func (x *CommentListReq) Reset() {
	*x = CommentListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mms_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommentListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommentListReq) ProtoMessage() {}

func (x *CommentListReq) ProtoReflect() protoreflect.Message {
	mi := &file_mms_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommentListReq.ProtoReflect.Descriptor instead.
func (*CommentListReq) Descriptor() ([]byte, []int) {
	return file_mms_proto_rawDescGZIP(), []int{23}
}

func (x *CommentListReq) GetIsReply() int32 {
	if x != nil && x.IsReply != nil {
		return *x.IsReply
	}
	return 0
}

func (x *CommentListReq) GetPage() int64 {
	if x != nil && x.Page != nil {
		return *x.Page
	}
	return 0
}

func (x *CommentListReq) GetPageSize() int64 {
	if x != nil && x.PageSize != nil {
		return *x.PageSize
	}
	return 0
}

func (x *CommentListReq) GetTitle() string {
	if x != nil && x.Title != nil {
		return *x.Title
	}
	return ""
}

func (x *CommentListReq) GetContent() string {
	if x != nil && x.Content != nil {
		return *x.Content
	}
	return ""
}

func (x *CommentListReq) GetCommentTime() []int64 {
	if x != nil {
		return x.CommentTime
	}
	return nil
}

type OauthProviderInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           *uint64 `protobuf:"varint,1,opt,name=id,proto3,oneof" json:"id"`
	CreatedAt    *int64  `protobuf:"varint,2,opt,name=created_at,json=createdAt,proto3,oneof" json:"created_at"`
	UpdatedAt    *int64  `protobuf:"varint,3,opt,name=updated_at,json=updatedAt,proto3,oneof" json:"updated_at"`
	Name         *string `protobuf:"bytes,4,opt,name=name,proto3,oneof" json:"name"`
	ClientId     *string `protobuf:"bytes,5,opt,name=client_id,json=clientId,proto3,oneof" json:"client_id"`
	ClientSecret *string `protobuf:"bytes,6,opt,name=client_secret,json=clientSecret,proto3,oneof" json:"client_secret"`
	RedirectUrl  *string `protobuf:"bytes,7,opt,name=redirect_url,json=redirectUrl,proto3,oneof" json:"redirect_url"`
	Scopes       *string `protobuf:"bytes,8,opt,name=scopes,proto3,oneof" json:"scopes"`
	AuthUrl      *string `protobuf:"bytes,9,opt,name=auth_url,json=authUrl,proto3,oneof" json:"auth_url"`
	TokenUrl     *string `protobuf:"bytes,10,opt,name=token_url,json=tokenUrl,proto3,oneof" json:"token_url"`
	AuthStyle    *uint64 `protobuf:"varint,11,opt,name=auth_style,json=authStyle,proto3,oneof" json:"auth_style"`
	InfoUrl      *string `protobuf:"bytes,12,opt,name=info_url,json=infoUrl,proto3,oneof" json:"info_url"`
}

func (x *OauthProviderInfo) Reset() {
	*x = OauthProviderInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mms_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OauthProviderInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OauthProviderInfo) ProtoMessage() {}

func (x *OauthProviderInfo) ProtoReflect() protoreflect.Message {
	mi := &file_mms_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OauthProviderInfo.ProtoReflect.Descriptor instead.
func (*OauthProviderInfo) Descriptor() ([]byte, []int) {
	return file_mms_proto_rawDescGZIP(), []int{24}
}

func (x *OauthProviderInfo) GetId() uint64 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *OauthProviderInfo) GetCreatedAt() int64 {
	if x != nil && x.CreatedAt != nil {
		return *x.CreatedAt
	}
	return 0
}

func (x *OauthProviderInfo) GetUpdatedAt() int64 {
	if x != nil && x.UpdatedAt != nil {
		return *x.UpdatedAt
	}
	return 0
}

func (x *OauthProviderInfo) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *OauthProviderInfo) GetClientId() string {
	if x != nil && x.ClientId != nil {
		return *x.ClientId
	}
	return ""
}

func (x *OauthProviderInfo) GetClientSecret() string {
	if x != nil && x.ClientSecret != nil {
		return *x.ClientSecret
	}
	return ""
}

func (x *OauthProviderInfo) GetRedirectUrl() string {
	if x != nil && x.RedirectUrl != nil {
		return *x.RedirectUrl
	}
	return ""
}

func (x *OauthProviderInfo) GetScopes() string {
	if x != nil && x.Scopes != nil {
		return *x.Scopes
	}
	return ""
}

func (x *OauthProviderInfo) GetAuthUrl() string {
	if x != nil && x.AuthUrl != nil {
		return *x.AuthUrl
	}
	return ""
}

func (x *OauthProviderInfo) GetTokenUrl() string {
	if x != nil && x.TokenUrl != nil {
		return *x.TokenUrl
	}
	return ""
}

func (x *OauthProviderInfo) GetAuthStyle() uint64 {
	if x != nil && x.AuthStyle != nil {
		return *x.AuthStyle
	}
	return 0
}

func (x *OauthProviderInfo) GetInfoUrl() string {
	if x != nil && x.InfoUrl != nil {
		return *x.InfoUrl
	}
	return ""
}

type CallbackReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State string `protobuf:"bytes,1,opt,name=state,proto3" json:"state"`
	Code  string `protobuf:"bytes,2,opt,name=code,proto3" json:"code"`
}

func (x *CallbackReq) Reset() {
	*x = CallbackReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mms_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CallbackReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CallbackReq) ProtoMessage() {}

func (x *CallbackReq) ProtoReflect() protoreflect.Message {
	mi := &file_mms_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CallbackReq.ProtoReflect.Descriptor instead.
func (*CallbackReq) Descriptor() ([]byte, []int) {
	return file_mms_proto_rawDescGZIP(), []int{25}
}

func (x *CallbackReq) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *CallbackReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type OauthLoginReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State    string `protobuf:"bytes,1,opt,name=state,proto3" json:"state"`
	Provider string `protobuf:"bytes,2,opt,name=provider,proto3" json:"provider"`
}

func (x *OauthLoginReq) Reset() {
	*x = OauthLoginReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mms_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OauthLoginReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OauthLoginReq) ProtoMessage() {}

func (x *OauthLoginReq) ProtoReflect() protoreflect.Message {
	mi := &file_mms_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OauthLoginReq.ProtoReflect.Descriptor instead.
func (*OauthLoginReq) Descriptor() ([]byte, []int) {
	return file_mms_proto_rawDescGZIP(), []int{26}
}

func (x *OauthLoginReq) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *OauthLoginReq) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

//  base message
type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mms_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_mms_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_mms_proto_rawDescGZIP(), []int{27}
}

type BaseUUIDResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id  string `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
	Msg string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg"`
}

func (x *BaseUUIDResp) Reset() {
	*x = BaseUUIDResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mms_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BaseUUIDResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaseUUIDResp) ProtoMessage() {}

func (x *BaseUUIDResp) ProtoReflect() protoreflect.Message {
	mi := &file_mms_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaseUUIDResp.ProtoReflect.Descriptor instead.
func (*BaseUUIDResp) Descriptor() ([]byte, []int) {
	return file_mms_proto_rawDescGZIP(), []int{28}
}

func (x *BaseUUIDResp) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *BaseUUIDResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type TokenListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page     uint64  `protobuf:"varint,1,opt,name=page,proto3" json:"page"`
	PageSize uint64  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size"`
	Username *string `protobuf:"bytes,3,opt,name=username,proto3,oneof" json:"username"`
	Nickname *string `protobuf:"bytes,4,opt,name=nickname,proto3,oneof" json:"nickname"`
	Email    *string `protobuf:"bytes,5,opt,name=email,proto3,oneof" json:"email"`
	Uuid     *string `protobuf:"bytes,6,opt,name=uuid,proto3,oneof" json:"uuid"`
}

func (x *TokenListReq) Reset() {
	*x = TokenListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mms_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TokenListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenListReq) ProtoMessage() {}

func (x *TokenListReq) ProtoReflect() protoreflect.Message {
	mi := &file_mms_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenListReq.ProtoReflect.Descriptor instead.
func (*TokenListReq) Descriptor() ([]byte, []int) {
	return file_mms_proto_rawDescGZIP(), []int{29}
}

func (x *TokenListReq) GetPage() uint64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *TokenListReq) GetPageSize() uint64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *TokenListReq) GetUsername() string {
	if x != nil && x.Username != nil {
		return *x.Username
	}
	return ""
}

func (x *TokenListReq) GetNickname() string {
	if x != nil && x.Nickname != nil {
		return *x.Nickname
	}
	return ""
}

func (x *TokenListReq) GetEmail() string {
	if x != nil && x.Email != nil {
		return *x.Email
	}
	return ""
}

func (x *TokenListReq) GetUuid() string {
	if x != nil && x.Uuid != nil {
		return *x.Uuid
	}
	return ""
}

type CommentInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         *int64       `protobuf:"varint,1,opt,name=id,proto3,oneof" json:"id"`
	Title      *string      `protobuf:"bytes,2,opt,name=title,proto3,oneof" json:"title"`
	Content    *string      `protobuf:"bytes,3,opt,name=content,proto3,oneof" json:"content"`
	MemberId   *string      `protobuf:"bytes,4,opt,name=memberId,proto3,oneof" json:"memberId"`
	CreateTime *int64       `protobuf:"varint,5,opt,name=create_time,json=createTime,proto3,oneof" json:"create_time"`
	UpdateTime *int64       `protobuf:"varint,6,opt,name=update_time,json=updateTime,proto3,oneof" json:"update_time"`
	Reply      []*ReplyInfo `protobuf:"bytes,7,rep,name=reply,proto3" json:"reply"`
	IsReply    *bool        `protobuf:"varint,8,opt,name=isReply,proto3,oneof" json:"isReply"`
	UserName   *string      `protobuf:"bytes,9,opt,name=userName,proto3,oneof" json:"userName"`
	NickName   *string      `protobuf:"bytes,10,opt,name=nickName,proto3,oneof" json:"nickName"`
	Email      *string      `protobuf:"bytes,11,opt,name=email,proto3,oneof" json:"email"`
	Avatar     *string      `protobuf:"bytes,12,opt,name=avatar,proto3,oneof" json:"avatar"`
}

func (x *CommentInfo) Reset() {
	*x = CommentInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mms_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommentInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommentInfo) ProtoMessage() {}

func (x *CommentInfo) ProtoReflect() protoreflect.Message {
	mi := &file_mms_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommentInfo.ProtoReflect.Descriptor instead.
func (*CommentInfo) Descriptor() ([]byte, []int) {
	return file_mms_proto_rawDescGZIP(), []int{30}
}

func (x *CommentInfo) GetId() int64 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *CommentInfo) GetTitle() string {
	if x != nil && x.Title != nil {
		return *x.Title
	}
	return ""
}

func (x *CommentInfo) GetContent() string {
	if x != nil && x.Content != nil {
		return *x.Content
	}
	return ""
}

func (x *CommentInfo) GetMemberId() string {
	if x != nil && x.MemberId != nil {
		return *x.MemberId
	}
	return ""
}

func (x *CommentInfo) GetCreateTime() int64 {
	if x != nil && x.CreateTime != nil {
		return *x.CreateTime
	}
	return 0
}

func (x *CommentInfo) GetUpdateTime() int64 {
	if x != nil && x.UpdateTime != nil {
		return *x.UpdateTime
	}
	return 0
}

func (x *CommentInfo) GetReply() []*ReplyInfo {
	if x != nil {
		return x.Reply
	}
	return nil
}

func (x *CommentInfo) GetIsReply() bool {
	if x != nil && x.IsReply != nil {
		return *x.IsReply
	}
	return false
}

func (x *CommentInfo) GetUserName() string {
	if x != nil && x.UserName != nil {
		return *x.UserName
	}
	return ""
}

func (x *CommentInfo) GetNickName() string {
	if x != nil && x.NickName != nil {
		return *x.NickName
	}
	return ""
}

func (x *CommentInfo) GetEmail() string {
	if x != nil && x.Email != nil {
		return *x.Email
	}
	return ""
}

func (x *CommentInfo) GetAvatar() string {
	if x != nil && x.Avatar != nil {
		return *x.Avatar
	}
	return ""
}

type ReplyInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         *int64  `protobuf:"varint,1,opt,name=id,proto3,oneof" json:"id"`
	CommentId  *int64  `protobuf:"varint,2,opt,name=commentId,proto3,oneof" json:"commentId"`
	Reply      *string `protobuf:"bytes,3,opt,name=reply,proto3,oneof" json:"reply"`
	AdminId    *string `protobuf:"bytes,4,opt,name=adminId,proto3,oneof" json:"adminId"`
	AdminName  *string `protobuf:"bytes,5,opt,name=adminName,proto3,oneof" json:"adminName"`
	CreateTime *int64  `protobuf:"varint,6,opt,name=create_time,json=createTime,proto3,oneof" json:"create_time"`
	UpdateTime *int64  `protobuf:"varint,7,opt,name=update_time,json=updateTime,proto3,oneof" json:"update_time"`
}

func (x *ReplyInfo) Reset() {
	*x = ReplyInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mms_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplyInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplyInfo) ProtoMessage() {}

func (x *ReplyInfo) ProtoReflect() protoreflect.Message {
	mi := &file_mms_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplyInfo.ProtoReflect.Descriptor instead.
func (*ReplyInfo) Descriptor() ([]byte, []int) {
	return file_mms_proto_rawDescGZIP(), []int{31}
}

func (x *ReplyInfo) GetId() int64 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *ReplyInfo) GetCommentId() int64 {
	if x != nil && x.CommentId != nil {
		return *x.CommentId
	}
	return 0
}

func (x *ReplyInfo) GetReply() string {
	if x != nil && x.Reply != nil {
		return *x.Reply
	}
	return ""
}

func (x *ReplyInfo) GetAdminId() string {
	if x != nil && x.AdminId != nil {
		return *x.AdminId
	}
	return ""
}

func (x *ReplyInfo) GetAdminName() string {
	if x != nil && x.AdminName != nil {
		return *x.AdminName
	}
	return ""
}

func (x *ReplyInfo) GetCreateTime() int64 {
	if x != nil && x.CreateTime != nil {
		return *x.CreateTime
	}
	return 0
}

func (x *ReplyInfo) GetUpdateTime() int64 {
	if x != nil && x.UpdateTime != nil {
		return *x.UpdateTime
	}
	return 0
}

type MemberCommentResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int64  `protobuf:"varint,1,opt,name=code,proto3" json:"code"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg"`
	Data string `protobuf:"bytes,3,opt,name=data,proto3" json:"data"`
}

func (x *MemberCommentResp) Reset() {
	*x = MemberCommentResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mms_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemberCommentResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemberCommentResp) ProtoMessage() {}

func (x *MemberCommentResp) ProtoReflect() protoreflect.Message {
	mi := &file_mms_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemberCommentResp.ProtoReflect.Descriptor instead.
func (*MemberCommentResp) Descriptor() ([]byte, []int) {
	return file_mms_proto_rawDescGZIP(), []int{32}
}

func (x *MemberCommentResp) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *MemberCommentResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *MemberCommentResp) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type RegisterMemberRespData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
}

func (x *RegisterMemberRespData) Reset() {
	*x = RegisterMemberRespData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mms_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterMemberRespData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterMemberRespData) ProtoMessage() {}

func (x *RegisterMemberRespData) ProtoReflect() protoreflect.Message {
	mi := &file_mms_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterMemberRespData.ProtoReflect.Descriptor instead.
func (*RegisterMemberRespData) Descriptor() ([]byte, []int) {
	return file_mms_proto_rawDescGZIP(), []int{33}
}

func (x *RegisterMemberRespData) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type CommentInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int64        `protobuf:"varint,1,opt,name=code,proto3" json:"code"`
	Msg  string       `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg"`
	Data *CommentInfo `protobuf:"bytes,3,opt,name=data,proto3,oneof" json:"data"`
}

func (x *CommentInfoResp) Reset() {
	*x = CommentInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mms_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommentInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommentInfoResp) ProtoMessage() {}

func (x *CommentInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_mms_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommentInfoResp.ProtoReflect.Descriptor instead.
func (*CommentInfoResp) Descriptor() ([]byte, []int) {
	return file_mms_proto_rawDescGZIP(), []int{34}
}

func (x *CommentInfoResp) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CommentInfoResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *CommentInfoResp) GetData() *CommentInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

type CommentList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List  []*CommentInfo `protobuf:"bytes,1,rep,name=list,proto3" json:"list"`
	Count *int64         `protobuf:"varint,2,opt,name=count,proto3,oneof" json:"count"`
}

func (x *CommentList) Reset() {
	*x = CommentList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mms_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommentList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommentList) ProtoMessage() {}

func (x *CommentList) ProtoReflect() protoreflect.Message {
	mi := &file_mms_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommentList.ProtoReflect.Descriptor instead.
func (*CommentList) Descriptor() ([]byte, []int) {
	return file_mms_proto_rawDescGZIP(), []int{35}
}

func (x *CommentList) GetList() []*CommentInfo {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *CommentList) GetCount() int64 {
	if x != nil && x.Count != nil {
		return *x.Count
	}
	return 0
}

type UsernameReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username"`
}

func (x *UsernameReq) Reset() {
	*x = UsernameReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mms_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UsernameReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UsernameReq) ProtoMessage() {}

func (x *UsernameReq) ProtoReflect() protoreflect.Message {
	mi := &file_mms_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UsernameReq.ProtoReflect.Descriptor instead.
func (*UsernameReq) Descriptor() ([]byte, []int) {
	return file_mms_proto_rawDescGZIP(), []int{36}
}

func (x *UsernameReq) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

type OauthProviderListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total uint64               `protobuf:"varint,1,opt,name=total,proto3" json:"total"`
	Data  []*OauthProviderInfo `protobuf:"bytes,2,rep,name=data,proto3" json:"data"`
}

func (x *OauthProviderListResp) Reset() {
	*x = OauthProviderListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mms_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OauthProviderListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OauthProviderListResp) ProtoMessage() {}

func (x *OauthProviderListResp) ProtoReflect() protoreflect.Message {
	mi := &file_mms_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OauthProviderListResp.ProtoReflect.Descriptor instead.
func (*OauthProviderListResp) Descriptor() ([]byte, []int) {
	return file_mms_proto_rawDescGZIP(), []int{37}
}

func (x *OauthProviderListResp) GetTotal() uint64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *OauthProviderListResp) GetData() []*OauthProviderInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

type MemberInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        *string `protobuf:"bytes,1,opt,name=id,proto3,oneof" json:"id"`
	CreatedAt *int64  `protobuf:"varint,2,opt,name=created_at,json=createdAt,proto3,oneof" json:"created_at"`
	UpdatedAt *int64  `protobuf:"varint,3,opt,name=updated_at,json=updatedAt,proto3,oneof" json:"updated_at"`
	Status    *uint32 `protobuf:"varint,4,opt,name=status,proto3,oneof" json:"status"`
	Username  *string `protobuf:"bytes,5,opt,name=username,proto3,oneof" json:"username"`
	Password  *string `protobuf:"bytes,6,opt,name=password,proto3,oneof" json:"password"`
	Nickname  *string `protobuf:"bytes,7,opt,name=nickname,proto3,oneof" json:"nickname"`
	RankId    *uint64 `protobuf:"varint,8,opt,name=rank_id,json=rankId,proto3,oneof" json:"rank_id"`
	Mobile    *string `protobuf:"bytes,9,opt,name=mobile,proto3,oneof" json:"mobile"`
	Email     *string `protobuf:"bytes,10,opt,name=email,proto3,oneof" json:"email"`
	Avatar    *string `protobuf:"bytes,11,opt,name=avatar,proto3,oneof" json:"avatar"`
	WechatId  *string `protobuf:"bytes,12,opt,name=wechat_id,json=wechatId,proto3,oneof" json:"wechat_id"`
	RankCode  *string `protobuf:"bytes,13,opt,name=rank_code,json=rankCode,proto3,oneof" json:"rank_code"`
	ExpiredAt *int64  `protobuf:"varint,14,opt,name=expired_at,json=expiredAt,proto3,oneof" json:"expired_at"`
	ForeinId  *string `protobuf:"bytes,15,opt,name=forein_id,json=foreinId,proto3,oneof" json:"forein_id"`
}

func (x *MemberInfo) Reset() {
	*x = MemberInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mms_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemberInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemberInfo) ProtoMessage() {}

func (x *MemberInfo) ProtoReflect() protoreflect.Message {
	mi := &file_mms_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemberInfo.ProtoReflect.Descriptor instead.
func (*MemberInfo) Descriptor() ([]byte, []int) {
	return file_mms_proto_rawDescGZIP(), []int{38}
}

func (x *MemberInfo) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *MemberInfo) GetCreatedAt() int64 {
	if x != nil && x.CreatedAt != nil {
		return *x.CreatedAt
	}
	return 0
}

func (x *MemberInfo) GetUpdatedAt() int64 {
	if x != nil && x.UpdatedAt != nil {
		return *x.UpdatedAt
	}
	return 0
}

func (x *MemberInfo) GetStatus() uint32 {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return 0
}

func (x *MemberInfo) GetUsername() string {
	if x != nil && x.Username != nil {
		return *x.Username
	}
	return ""
}

func (x *MemberInfo) GetPassword() string {
	if x != nil && x.Password != nil {
		return *x.Password
	}
	return ""
}

func (x *MemberInfo) GetNickname() string {
	if x != nil && x.Nickname != nil {
		return *x.Nickname
	}
	return ""
}

func (x *MemberInfo) GetRankId() uint64 {
	if x != nil && x.RankId != nil {
		return *x.RankId
	}
	return 0
}

func (x *MemberInfo) GetMobile() string {
	if x != nil && x.Mobile != nil {
		return *x.Mobile
	}
	return ""
}

func (x *MemberInfo) GetEmail() string {
	if x != nil && x.Email != nil {
		return *x.Email
	}
	return ""
}

func (x *MemberInfo) GetAvatar() string {
	if x != nil && x.Avatar != nil {
		return *x.Avatar
	}
	return ""
}

func (x *MemberInfo) GetWechatId() string {
	if x != nil && x.WechatId != nil {
		return *x.WechatId
	}
	return ""
}

func (x *MemberInfo) GetRankCode() string {
	if x != nil && x.RankCode != nil {
		return *x.RankCode
	}
	return ""
}

func (x *MemberInfo) GetExpiredAt() int64 {
	if x != nil && x.ExpiredAt != nil {
		return *x.ExpiredAt
	}
	return 0
}

func (x *MemberInfo) GetForeinId() string {
	if x != nil && x.ForeinId != nil {
		return *x.ForeinId
	}
	return ""
}

type RegisterMemberResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int64                   `protobuf:"varint,1,opt,name=code,proto3" json:"code"`
	Msg  string                  `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg"`
	Data *RegisterMemberRespData `protobuf:"bytes,3,opt,name=data,proto3,oneof" json:"data"`
}

func (x *RegisterMemberResp) Reset() {
	*x = RegisterMemberResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mms_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterMemberResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterMemberResp) ProtoMessage() {}

func (x *RegisterMemberResp) ProtoReflect() protoreflect.Message {
	mi := &file_mms_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterMemberResp.ProtoReflect.Descriptor instead.
func (*RegisterMemberResp) Descriptor() ([]byte, []int) {
	return file_mms_proto_rawDescGZIP(), []int{39}
}

func (x *RegisterMemberResp) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *RegisterMemberResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *RegisterMemberResp) GetData() *RegisterMemberRespData {
	if x != nil {
		return x.Data
	}
	return nil
}

type CommentIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id *int64 `protobuf:"varint,1,opt,name=id,proto3,oneof" json:"id"`
}

func (x *CommentIdReq) Reset() {
	*x = CommentIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mms_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommentIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommentIdReq) ProtoMessage() {}

func (x *CommentIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_mms_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommentIdReq.ProtoReflect.Descriptor instead.
func (*CommentIdReq) Descriptor() ([]byte, []int) {
	return file_mms_proto_rawDescGZIP(), []int{40}
}

func (x *CommentIdReq) GetId() int64 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

type MemberInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int64               `protobuf:"varint,1,opt,name=code,proto3" json:"code"`
	Msg  string              `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg"`
	Data *MemberInfoRespData `protobuf:"bytes,3,opt,name=data,proto3,oneof" json:"data"`
}

func (x *MemberInfoResp) Reset() {
	*x = MemberInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mms_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemberInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemberInfoResp) ProtoMessage() {}

func (x *MemberInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_mms_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemberInfoResp.ProtoReflect.Descriptor instead.
func (*MemberInfoResp) Descriptor() ([]byte, []int) {
	return file_mms_proto_rawDescGZIP(), []int{41}
}

func (x *MemberInfoResp) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *MemberInfoResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *MemberInfoResp) GetData() *MemberInfoRespData {
	if x != nil {
		return x.Data
	}
	return nil
}

type MemberInfoRespData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsExist    int64       `protobuf:"varint,1,opt,name=isExist,proto3" json:"isExist"`
	MemberInfo *MemberInfo `protobuf:"bytes,2,opt,name=memberInfo,proto3,oneof" json:"memberInfo"`
}

func (x *MemberInfoRespData) Reset() {
	*x = MemberInfoRespData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mms_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemberInfoRespData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemberInfoRespData) ProtoMessage() {}

func (x *MemberInfoRespData) ProtoReflect() protoreflect.Message {
	mi := &file_mms_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemberInfoRespData.ProtoReflect.Descriptor instead.
func (*MemberInfoRespData) Descriptor() ([]byte, []int) {
	return file_mms_proto_rawDescGZIP(), []int{42}
}

func (x *MemberInfoRespData) GetIsExist() int64 {
	if x != nil {
		return x.IsExist
	}
	return 0
}

func (x *MemberInfoRespData) GetMemberInfo() *MemberInfo {
	if x != nil {
		return x.MemberInfo
	}
	return nil
}

type IDReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
}

func (x *IDReq) Reset() {
	*x = IDReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mms_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IDReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IDReq) ProtoMessage() {}

func (x *IDReq) ProtoReflect() protoreflect.Message {
	mi := &file_mms_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IDReq.ProtoReflect.Descriptor instead.
func (*IDReq) Descriptor() ([]byte, []int) {
	return file_mms_proto_rawDescGZIP(), []int{43}
}

func (x *IDReq) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type PageInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page     uint64 `protobuf:"varint,1,opt,name=page,proto3" json:"page"`
	PageSize uint64 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size"`
}

func (x *PageInfoReq) Reset() {
	*x = PageInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mms_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PageInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageInfoReq) ProtoMessage() {}

func (x *PageInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_mms_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageInfoReq.ProtoReflect.Descriptor instead.
func (*PageInfoReq) Descriptor() ([]byte, []int) {
	return file_mms_proto_rawDescGZIP(), []int{44}
}

func (x *PageInfoReq) GetPage() uint64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *PageInfoReq) GetPageSize() uint64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

var File_mms_proto protoreflect.FileDescriptor

var file_mms_proto_rawDesc = []byte{
	0x0a, 0x09, 0x6d, 0x6d, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x6d, 0x6d, 0x73,
	0x22, 0x61, 0x0a, 0x11, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x22, 0x97, 0x01, 0x0a, 0x0e, 0x53, 0x79, 0x6e, 0x63, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x12, 0x23, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x6d, 0x6d, 0x73, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x24, 0x0a, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50,
	0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x69, 0x0a,
	0x14, 0x4f, 0x61, 0x75, 0x74, 0x68, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67,
	0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x70, 0x61,
	0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x42,
	0x07, 0x0a, 0x05, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x85, 0x03, 0x0a, 0x09, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x13, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x00, 0x52, 0x02, 0x69, 0x64, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x48,
	0x01, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x88, 0x01, 0x01, 0x12,
	0x22, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x48, 0x02, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0d, 0x48, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x88, 0x01, 0x01,
	0x12, 0x17, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04,
	0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x06, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x88, 0x01,
	0x01, 0x12, 0x22, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x03, 0x48, 0x07, 0x52, 0x09, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64,
	0x41, 0x74, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x48, 0x08, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x69, 0x64, 0x42, 0x0d, 0x0a,
	0x0b, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x42, 0x0d, 0x0a, 0x0b,
	0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x42, 0x09, 0x0a, 0x07, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x42,
	0x08, 0x0a, 0x06, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x22, 0x1c, 0x0a, 0x08, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03,
	0x6d, 0x73, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x6f,
	0x0a, 0x0f, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x2d, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x6d, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x22,
	0x19, 0x0a, 0x07, 0x55, 0x55, 0x49, 0x44, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x2e, 0x0a, 0x0a, 0x42, 0x61,
	0x73, 0x65, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0xaa, 0x01, 0x0a, 0x08, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x12, 0x1d, 0x0a, 0x07, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x48, 0x01, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x88, 0x01, 0x01, 0x12,
	0x1f, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x48, 0x02, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x88, 0x01, 0x01,
	0x12, 0x19, 0x0a, 0x05, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x03, 0x52, 0x05, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x49, 0x64, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x70, 0x61, 0x67, 0x65,
	0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x42, 0x08, 0x0a,
	0x06, 0x5f, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x6e, 0x0a, 0x0f, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69,
	0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69,
	0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x17,
	0x0a, 0x07, 0x72, 0x61, 0x6e, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x06, 0x72, 0x61, 0x6e, 0x6b, 0x49, 0x64, 0x22, 0x49, 0x0a, 0x0d, 0x53, 0x79, 0x6e, 0x63, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x24, 0x0a, 0x0d,
	0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x22, 0xb5, 0x02, 0x0a, 0x0e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x61, 0x6e,
	0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x13, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x48, 0x00, 0x52, 0x02, 0x69, 0x64, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x48, 0x01,
	0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x88, 0x01, 0x01, 0x12, 0x22,
	0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x48, 0x02, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x88,
	0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x03, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x25, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x04, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x88,
	0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x05, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x88, 0x01, 0x01, 0x12,
	0x17, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x06, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x69, 0x64, 0x42,
	0x0d, 0x0a, 0x0b, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x42, 0x0d,
	0x0a, 0x0b, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x42, 0x07, 0x0a,
	0x05, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x72, 0x65, 0x6d, 0x61, 0x72,
	0x6b, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x1a, 0x0a, 0x06, 0x49, 0x44,
	0x73, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x04, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x1c, 0x0a, 0x08, 0x55, 0x55, 0x49, 0x44, 0x73, 0x52,
	0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x03, 0x69, 0x64, 0x73, 0x22, 0x53, 0x0a, 0x12, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x61,
	0x6e, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x12, 0x27, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x6d, 0x6d, 0x73, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x61, 0x6e, 0x6b, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x4d, 0x0a, 0x11, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x32, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6d, 0x73, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xc5, 0x01, 0x0a, 0x11, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x52, 0x61, 0x6e, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12,
	0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x25, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12,
	0x1b, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x02, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b,
	0x22, 0x25, 0x0a, 0x11, 0x4f, 0x61, 0x75, 0x74, 0x68, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x22, 0x49, 0x0a, 0x0d, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x22,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d,
	0x6d, 0x73, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x22, 0x4b, 0x0a, 0x0e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x23, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6d, 0x6d, 0x73, 0x2e, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22,
	0xc3, 0x02, 0x0a, 0x0d, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69,
	0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69,
	0x7a, 0x65, 0x12, 0x1f, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d,
	0x65, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x88, 0x01,
	0x01, 0x12, 0x19, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x03, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x1c, 0x0a, 0x07,
	0x72, 0x61, 0x6e, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x48, 0x04, 0x52,
	0x06, 0x72, 0x61, 0x6e, 0x6b, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x77, 0x65,
	0x63, 0x68, 0x61, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x48, 0x05, 0x52,
	0x08, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x49, 0x64, 0x88, 0x01, 0x01, 0x42, 0x0b, 0x0a, 0x09,
	0x5f, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x6e, 0x69,
	0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x6d, 0x6f, 0x62, 0x69, 0x6c,
	0x65, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x42, 0x0a, 0x0a, 0x08, 0x5f,
	0x72, 0x61, 0x6e, 0x6b, 0x5f, 0x69, 0x64, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x77, 0x65, 0x63, 0x68,
	0x61, 0x74, 0x5f, 0x69, 0x64, 0x22, 0x4d, 0x0a, 0x0f, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x24, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6d, 0x6d, 0x73, 0x2e, 0x43, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x22, 0x5e, 0x0a, 0x09, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x2c, 0x0a, 0x09, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x6d, 0x73, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x19, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00,
	0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x22, 0xfd, 0x01, 0x0a, 0x0e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1d, 0x0a, 0x07, 0x69, 0x73, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x07, 0x69, 0x73, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x48, 0x01, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x88, 0x01, 0x01, 0x12,
	0x1f, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x48, 0x02, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x88, 0x01, 0x01,
	0x12, 0x19, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x03, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x07,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x03, 0x28, 0x03, 0x52,
	0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x42, 0x0a, 0x0a, 0x08,
	0x5f, 0x69, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x70, 0x61, 0x67,
	0x65, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x42, 0x08,
	0x0a, 0x06, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x22, 0xc1, 0x04, 0x0a, 0x11, 0x4f, 0x61, 0x75, 0x74, 0x68, 0x50, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x13, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x48, 0x00, 0x52, 0x02, 0x69, 0x64, 0x88, 0x01, 0x01, 0x12,
	0x22, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x48, 0x01, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x48, 0x02, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01,
	0x12, 0x20, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x88,
	0x01, 0x01, 0x12, 0x28, 0x0a, 0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x63,
	0x72, 0x65, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x05, 0x52, 0x0c, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x0c,
	0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x06, 0x52, 0x0b, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x55, 0x72,
	0x6c, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x73, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x07, 0x52, 0x06, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x73, 0x88, 0x01,
	0x01, 0x12, 0x1e, 0x0a, 0x08, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x08, 0x52, 0x07, 0x61, 0x75, 0x74, 0x68, 0x55, 0x72, 0x6c, 0x88, 0x01,
	0x01, 0x12, 0x20, 0x0a, 0x09, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x09, 0x52, 0x08, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x55, 0x72, 0x6c,
	0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x73, 0x74, 0x79, 0x6c,
	0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x04, 0x48, 0x0a, 0x52, 0x09, 0x61, 0x75, 0x74, 0x68, 0x53,
	0x74, 0x79, 0x6c, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x08, 0x69, 0x6e, 0x66, 0x6f, 0x5f,
	0x75, 0x72, 0x6c, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0b, 0x52, 0x07, 0x69, 0x6e, 0x66,
	0x6f, 0x55, 0x72, 0x6c, 0x88, 0x01, 0x01, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x69, 0x64, 0x42, 0x0d,
	0x0a, 0x0b, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x42, 0x0d, 0x0a,
	0x0b, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x42, 0x07, 0x0a, 0x05,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x73,
	0x65, 0x63, 0x72, 0x65, 0x74, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x5f, 0x75, 0x72, 0x6c, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x73, 0x63, 0x6f, 0x70, 0x65,
	0x73, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x75, 0x72, 0x6c, 0x42, 0x0c,
	0x0a, 0x0a, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x42, 0x0d, 0x0a, 0x0b,
	0x5f, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x42, 0x0b, 0x0a, 0x09, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x75, 0x72, 0x6c, 0x22, 0x37, 0x0a, 0x0b, 0x43, 0x61, 0x6c, 0x6c,
	0x62, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x22, 0x41, 0x0a, 0x0d, 0x4f, 0x61, 0x75, 0x74, 0x68, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52,
	0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x22, 0x07, 0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x30, 0x0a,
	0x0c, 0x42, 0x61, 0x73, 0x65, 0x55, 0x55, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a,
	0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22,
	0xe2, 0x01, 0x0a, 0x0c, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x12, 0x1f, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x88,
	0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x02, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x17,
	0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x04,
	0x75, 0x75, 0x69, 0x64, 0x88, 0x01, 0x01, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x75, 0x73, 0x65, 0x72,
	0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d,
	0x65, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x42, 0x07, 0x0a, 0x05, 0x5f,
	0x75, 0x75, 0x69, 0x64, 0x22, 0x8d, 0x04, 0x0a, 0x0b, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x13, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x48, 0x00, 0x52, 0x02, 0x69, 0x64, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49,
	0x64, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x48, 0x04, 0x52, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x48,
	0x05, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01,
	0x12, 0x24, 0x0a, 0x05, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x6d, 0x6d, 0x73, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x05, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1d, 0x0a, 0x07, 0x69, 0x73, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x48, 0x06, 0x52, 0x07, 0x69, 0x73, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x48, 0x07, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e,
	0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x08, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b,
	0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x48, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x88,
	0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x0a, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x88, 0x01, 0x01, 0x42,
	0x05, 0x0a, 0x03, 0x5f, 0x69, 0x64, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x42, 0x0b, 0x0a, 0x09,
	0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x69, 0x73,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x42,
	0x08, 0x0a, 0x06, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x61, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x22, 0xc5, 0x02, 0x0a, 0x09, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x13, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00,
	0x52, 0x02, 0x69, 0x64, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x48, 0x01, 0x52, 0x09, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x72, 0x65,
	0x70, 0x6c, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x05, 0x72, 0x65, 0x70,
	0x6c, 0x79, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x49, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x07, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x49,
	0x64, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x09, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x09, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x48, 0x05, 0x52, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a,
	0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x03, 0x48, 0x06, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x88, 0x01, 0x01, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x69, 0x64, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x72, 0x65, 0x70,
	0x6c, 0x79, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x49, 0x64, 0x42, 0x0c,
	0x0a, 0x0a, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x42, 0x0e, 0x0a, 0x0c,
	0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x42, 0x0e, 0x0a, 0x0c,
	0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x22, 0x4d, 0x0a, 0x11,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x28, 0x0a, 0x16, 0x52,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x6b, 0x0a, 0x0f, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x29,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6d,
	0x6d, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x64, 0x61,
	0x74, 0x61, 0x22, 0x58, 0x0a, 0x0b, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x24, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x6d, 0x6d, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x88,
	0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x29, 0x0a, 0x0b,
	0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x59, 0x0a, 0x15, 0x4f, 0x61, 0x75, 0x74, 0x68,
	0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x2a, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x6d, 0x73, 0x2e, 0x4f, 0x61, 0x75, 0x74, 0x68,
	0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x22, 0xa2, 0x05, 0x0a, 0x0a, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x13, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x02, 0x69, 0x64, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x48, 0x01, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x48, 0x02,
	0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x88, 0x01, 0x01, 0x12, 0x1b,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x03,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08,
	0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x05,
	0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a,
	0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x06, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1c,
	0x0a, 0x07, 0x72, 0x61, 0x6e, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x48,
	0x07, 0x52, 0x06, 0x72, 0x61, 0x6e, 0x6b, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06,
	0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x48, 0x08, 0x52, 0x06,
	0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x0a, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x88, 0x01,
	0x01, 0x12, 0x20, 0x0a, 0x09, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x0b, 0x52, 0x08, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x49, 0x64,
	0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x72, 0x61, 0x6e, 0x6b, 0x5f, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0c, 0x52, 0x08, 0x72, 0x61, 0x6e, 0x6b, 0x43, 0x6f,
	0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x48, 0x0d, 0x52, 0x09, 0x65, 0x78, 0x70,
	0x69, 0x72, 0x65, 0x64, 0x41, 0x74, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x66, 0x6f, 0x72,
	0x65, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0e, 0x52, 0x08,
	0x66, 0x6f, 0x72, 0x65, 0x69, 0x6e, 0x49, 0x64, 0x88, 0x01, 0x01, 0x42, 0x05, 0x0a, 0x03, 0x5f,
	0x69, 0x64, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x42, 0x09, 0x0a, 0x07, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x0b, 0x0a, 0x09, 0x5f,
	0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x70, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61,
	0x6d, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x72, 0x61, 0x6e, 0x6b, 0x5f, 0x69, 0x64, 0x42, 0x09,
	0x0a, 0x07, 0x5f, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x42, 0x0c,
	0x0a, 0x0a, 0x5f, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x69, 0x64, 0x42, 0x0c, 0x0a, 0x0a,
	0x5f, 0x72, 0x61, 0x6e, 0x6b, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x65,
	0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x66, 0x6f,
	0x72, 0x65, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x22, 0x79, 0x0a, 0x12, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x65, 0x72, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6d, 0x73, 0x67, 0x12, 0x34, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x6d, 0x6d, 0x73, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x64, 0x61,
	0x74, 0x61, 0x22, 0x2a, 0x0a, 0x0c, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x52,
	0x65, 0x71, 0x12, 0x13, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00,
	0x52, 0x02, 0x69, 0x64, 0x88, 0x01, 0x01, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x69, 0x64, 0x22, 0x71,
	0x0a, 0x0e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x30, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x6d, 0x73, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x64, 0x61, 0x74,
	0x61, 0x22, 0x73, 0x0a, 0x12, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x73, 0x70, 0x44, 0x61, 0x74, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x73, 0x45, 0x78, 0x69,
	0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x69, 0x73, 0x45, 0x78, 0x69, 0x73,
	0x74, 0x12, 0x34, 0x0a, 0x0a, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6d, 0x6d, 0x73, 0x2e, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x0a, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x88, 0x01, 0x01, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x6d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x17, 0x0a, 0x05, 0x49, 0x44, 0x52, 0x65, 0x71, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x22,
	0x3e, 0x0a, 0x0b, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x32,
	0xf7, 0x10, 0x0a, 0x03, 0x4d, 0x6d, 0x73, 0x12, 0x29, 0x0a, 0x0c, 0x69, 0x6e, 0x69, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x12, 0x0a, 0x2e, 0x6d, 0x6d, 0x73, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x1a, 0x0d, 0x2e, 0x6d, 0x6d, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x39, 0x0a, 0x0d, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x12, 0x10, 0x2e, 0x6d, 0x6d, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x16, 0x2e, 0x6d, 0x6d, 0x73, 0x2e, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x41, 0x0a,
	0x14, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x13, 0x2e, 0x6d, 0x6d, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x6d, 0x6d, 0x73,
	0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x3b, 0x0a, 0x10, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x12, 0x11, 0x2e, 0x6d, 0x6d, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x6d, 0x6d, 0x73, 0x2e, 0x43, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2d, 0x0a,
	0x0c, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x2e,
	0x6d, 0x6d, 0x73, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x0d, 0x2e,
	0x6d, 0x6d, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3c, 0x0a, 0x13,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x13, 0x2e, 0x6d, 0x6d, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x10, 0x2e, 0x6d, 0x6d, 0x73, 0x2e, 0x43,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x36, 0x0a, 0x0f, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x11, 0x2e,
	0x6d, 0x6d, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x52, 0x65, 0x71,
	0x1a, 0x10, 0x2e, 0x6d, 0x6d, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x32, 0x0a, 0x11, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x0d, 0x2e, 0x6d, 0x6d, 0x73, 0x2e, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x0e, 0x2e, 0x6d, 0x6d, 0x73, 0x2e, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x0f, 0x2e, 0x6d, 0x6d, 0x73, 0x2e, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x11, 0x2e, 0x6d, 0x6d, 0x73, 0x2e, 0x42, 0x61,
	0x73, 0x65, 0x55, 0x55, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3a, 0x0a, 0x0e, 0x72, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x0f, 0x2e, 0x6d,
	0x6d, 0x73, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x17, 0x2e,
	0x6d, 0x6d, 0x73, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2e, 0x0a, 0x0c, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x0f, 0x2e, 0x6d, 0x6d, 0x73, 0x2e, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x0d, 0x2e, 0x6d, 0x6d, 0x73, 0x2e, 0x42, 0x61,
	0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x38, 0x0a, 0x0d, 0x67, 0x65, 0x74, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x12, 0x2e, 0x6d, 0x6d, 0x73, 0x2e, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x6d, 0x6d,
	0x73, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x2c, 0x0a, 0x0c, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x12, 0x0d, 0x2e, 0x6d, 0x6d, 0x73, 0x2e, 0x55, 0x55, 0x49, 0x44, 0x73, 0x52, 0x65, 0x71, 0x1a,
	0x0d, 0x2e, 0x6d, 0x6d, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2e,
	0x0a, 0x0d, 0x67, 0x65, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x42, 0x79, 0x49, 0x64, 0x12,
	0x0c, 0x2e, 0x6d, 0x6d, 0x73, 0x2e, 0x55, 0x55, 0x49, 0x44, 0x52, 0x65, 0x71, 0x1a, 0x0f, 0x2e,
	0x6d, 0x6d, 0x73, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x38,
	0x0a, 0x13, 0x67, 0x65, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x42, 0x79, 0x55, 0x73, 0x65,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x2e, 0x6d, 0x6d, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x6e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x0f, 0x2e, 0x6d, 0x6d, 0x73, 0x2e, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2c, 0x0a, 0x09, 0x67, 0x65, 0x74, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x0a, 0x2e, 0x6d, 0x6d, 0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x1a, 0x13, 0x2e, 0x6d, 0x6d, 0x73, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x38, 0x0a, 0x0d, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x32, 0x12, 0x0f, 0x2e, 0x6d, 0x6d, 0x73, 0x2e, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x16, 0x2e, 0x6d, 0x6d, 0x73, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x32, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x3d, 0x0a, 0x12, 0x73, 0x79, 0x6e, 0x63, 0x46, 0x69, 0x72, 0x65, 0x62, 0x61, 0x73, 0x65,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x12, 0x2e, 0x6d, 0x6d, 0x73, 0x2e, 0x53, 0x79, 0x6e,
	0x63, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x6d, 0x6d, 0x73,
	0x2e, 0x53, 0x79, 0x6e, 0x63, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x34, 0x0a, 0x13, 0x67, 0x65, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x42, 0x79, 0x46, 0x6f,
	0x72, 0x65, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x0c, 0x2e, 0x6d, 0x6d, 0x73, 0x2e, 0x55, 0x55, 0x49,
	0x44, 0x52, 0x65, 0x71, 0x1a, 0x0f, 0x2e, 0x6d, 0x6d, 0x73, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x39, 0x0a, 0x14, 0x67, 0x65, 0x74, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x42, 0x79, 0x46, 0x6f, 0x72, 0x65, 0x69, 0x6e, 0x49, 0x64, 0x32, 0x12, 0x0c, 0x2e,
	0x6d, 0x6d, 0x73, 0x2e, 0x55, 0x55, 0x49, 0x44, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x6d, 0x6d,
	0x73, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x38, 0x0a, 0x10, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x52, 0x61, 0x6e, 0x6b, 0x12, 0x13, 0x2e, 0x6d, 0x6d, 0x73, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x52, 0x61, 0x6e, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x0f, 0x2e, 0x6d, 0x6d, 0x73, 0x2e,
	0x42, 0x61, 0x73, 0x65, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x12, 0x36, 0x0a, 0x10, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x61, 0x6e, 0x6b, 0x12, 0x13,
	0x2e, 0x6d, 0x6d, 0x73, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x61, 0x6e, 0x6b, 0x49,
	0x6e, 0x66, 0x6f, 0x1a, 0x0d, 0x2e, 0x6d, 0x6d, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x44, 0x0a, 0x11, 0x67, 0x65, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52,
	0x61, 0x6e, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x16, 0x2e, 0x6d, 0x6d, 0x73, 0x2e, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x52, 0x61, 0x6e, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a,
	0x17, 0x2e, 0x6d, 0x6d, 0x73, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x61, 0x6e, 0x6b,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x34, 0x0a, 0x11, 0x67, 0x65, 0x74, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x61, 0x6e, 0x6b, 0x42, 0x79, 0x49, 0x64, 0x12, 0x0a, 0x2e,
	0x6d, 0x6d, 0x73, 0x2e, 0x49, 0x44, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x6d, 0x6d, 0x73, 0x2e,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x61, 0x6e, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2e,
	0x0a, 0x10, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x61,
	0x6e, 0x6b, 0x12, 0x0b, 0x2e, 0x6d, 0x6d, 0x73, 0x2e, 0x49, 0x44, 0x73, 0x52, 0x65, 0x71, 0x1a,
	0x0d, 0x2e, 0x6d, 0x6d, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3e,
	0x0a, 0x13, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x61, 0x75, 0x74, 0x68, 0x50, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x16, 0x2e, 0x6d, 0x6d, 0x73, 0x2e, 0x4f, 0x61, 0x75, 0x74,
	0x68, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x0f, 0x2e,
	0x6d, 0x6d, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3c,
	0x0a, 0x13, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x61, 0x75, 0x74, 0x68, 0x50, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x16, 0x2e, 0x6d, 0x6d, 0x73, 0x2e, 0x4f, 0x61, 0x75, 0x74,
	0x68, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x0d, 0x2e,
	0x6d, 0x6d, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4d, 0x0a, 0x14,
	0x67, 0x65, 0x74, 0x4f, 0x61, 0x75, 0x74, 0x68, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x19, 0x2e, 0x6d, 0x6d, 0x73, 0x2e, 0x4f, 0x61, 0x75, 0x74, 0x68,
	0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a,
	0x1a, 0x2e, 0x6d, 0x6d, 0x73, 0x2e, 0x4f, 0x61, 0x75, 0x74, 0x68, 0x50, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3a, 0x0a, 0x14, 0x67,
	0x65, 0x74, 0x4f, 0x61, 0x75, 0x74, 0x68, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x42,
	0x79, 0x49, 0x64, 0x12, 0x0a, 0x2e, 0x6d, 0x6d, 0x73, 0x2e, 0x49, 0x44, 0x52, 0x65, 0x71, 0x1a,
	0x16, 0x2e, 0x6d, 0x6d, 0x73, 0x2e, 0x4f, 0x61, 0x75, 0x74, 0x68, 0x50, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x31, 0x0a, 0x13, 0x64, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x4f, 0x61, 0x75, 0x74, 0x68, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x0b,
	0x2e, 0x6d, 0x6d, 0x73, 0x2e, 0x49, 0x44, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x0d, 0x2e, 0x6d, 0x6d,
	0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x38, 0x0a, 0x0a, 0x6f, 0x61,
	0x75, 0x74, 0x68, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x12, 0x2e, 0x6d, 0x6d, 0x73, 0x2e, 0x4f,
	0x61, 0x75, 0x74, 0x68, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x6d,
	0x6d, 0x73, 0x2e, 0x4f, 0x61, 0x75, 0x74, 0x68, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x32, 0x0a, 0x0d, 0x6f, 0x61, 0x75, 0x74, 0x68, 0x43, 0x61, 0x6c,
	0x6c, 0x62, 0x61, 0x63, 0x6b, 0x12, 0x10, 0x2e, 0x6d, 0x6d, 0x73, 0x2e, 0x43, 0x61, 0x6c, 0x6c,
	0x62, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x1a, 0x0f, 0x2e, 0x6d, 0x6d, 0x73, 0x2e, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3b, 0x0a, 0x16, 0x77, 0x65, 0x63, 0x68,
	0x61, 0x74, 0x4d, 0x69, 0x6e, 0x69, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x4c, 0x6f, 0x67,
	0x69, 0x6e, 0x12, 0x12, 0x2e, 0x6d, 0x6d, 0x73, 0x2e, 0x4f, 0x61, 0x75, 0x74, 0x68, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x0d, 0x2e, 0x6d, 0x6d, 0x73, 0x2e, 0x42, 0x61, 0x73,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x30, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x0e, 0x2e, 0x6d, 0x6d, 0x73, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x11, 0x2e, 0x6d, 0x6d, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x55,
	0x55, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2b, 0x0a, 0x0b, 0x64, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x0d, 0x2e, 0x6d, 0x6d, 0x73, 0x2e, 0x55, 0x55, 0x49,
	0x44, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x0d, 0x2e, 0x6d, 0x6d, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x35, 0x0a, 0x0c, 0x67, 0x65, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x11, 0x2e, 0x6d, 0x6d, 0x73, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x6d, 0x6d, 0x73, 0x2e, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2c, 0x0a, 0x0c, 0x67,
	0x65, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x42, 0x79, 0x49, 0x64, 0x12, 0x0c, 0x2e, 0x6d, 0x6d,
	0x73, 0x2e, 0x55, 0x55, 0x49, 0x44, 0x52, 0x65, 0x71, 0x1a, 0x0e, 0x2e, 0x6d, 0x6d, 0x73, 0x2e,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x30, 0x0a, 0x11, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x41, 0x6c, 0x6c, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x0c,
	0x2e, 0x6d, 0x6d, 0x73, 0x2e, 0x55, 0x55, 0x49, 0x44, 0x52, 0x65, 0x71, 0x1a, 0x0d, 0x2e, 0x6d,
	0x6d, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2c, 0x0a, 0x0b, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x0e, 0x2e, 0x6d, 0x6d, 0x73,
	0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x0d, 0x2e, 0x6d, 0x6d, 0x73,
	0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x42, 0x07, 0x5a, 0x05, 0x2e, 0x2f, 0x6d,
	0x6d, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_mms_proto_rawDescOnce sync.Once
	file_mms_proto_rawDescData = file_mms_proto_rawDesc
)

func file_mms_proto_rawDescGZIP() []byte {
	file_mms_proto_rawDescOnce.Do(func() {
		file_mms_proto_rawDescData = protoimpl.X.CompressGZIP(file_mms_proto_rawDescData)
	})
	return file_mms_proto_rawDescData
}

var file_mms_proto_msgTypes = make([]protoimpl.MessageInfo, 45)
var file_mms_proto_goTypes = []interface{}{
	(*MemberRegisterReq)(nil),      // 0: mms.MemberRegisterReq
	(*SyncMemberResp)(nil),         // 1: mms.SyncMemberResp
	(*OauthProviderListReq)(nil),   // 2: mms.OauthProviderListReq
	(*TokenInfo)(nil),              // 3: mms.TokenInfo
	(*BaseResp)(nil),               // 4: mms.BaseResp
	(*CommentListResp)(nil),        // 5: mms.CommentListResp
	(*UUIDReq)(nil),                // 6: mms.UUIDReq
	(*BaseIDResp)(nil),             // 7: mms.BaseIDResp
	(*ReplyReq)(nil),               // 8: mms.ReplyReq
	(*MemberLoginResp)(nil),        // 9: mms.MemberLoginResp
	(*SyncMemberReq)(nil),          // 10: mms.SyncMemberReq
	(*MemberRankInfo)(nil),         // 11: mms.MemberRankInfo
	(*IDsReq)(nil),                 // 12: mms.IDsReq
	(*UUIDsReq)(nil),               // 13: mms.UUIDsReq
	(*MemberRankListResp)(nil),     // 14: mms.MemberRankListResp
	(*UpdateMember2Resp)(nil),      // 15: mms.UpdateMember2Resp
	(*MemberRankListReq)(nil),      // 16: mms.MemberRankListReq
	(*OauthRedirectResp)(nil),      // 17: mms.OauthRedirectResp
	(*TokenListResp)(nil),          // 18: mms.TokenListResp
	(*MemberListResp)(nil),         // 19: mms.MemberListResp
	(*MemberListReq)(nil),          // 20: mms.MemberListReq
	(*CommentListData)(nil),        // 21: mms.CommentListData
	(*ReplyList)(nil),              // 22: mms.ReplyList
	(*CommentListReq)(nil),         // 23: mms.CommentListReq
	(*OauthProviderInfo)(nil),      // 24: mms.OauthProviderInfo
	(*CallbackReq)(nil),            // 25: mms.CallbackReq
	(*OauthLoginReq)(nil),          // 26: mms.OauthLoginReq
	(*Empty)(nil),                  // 27: mms.Empty
	(*BaseUUIDResp)(nil),           // 28: mms.BaseUUIDResp
	(*TokenListReq)(nil),           // 29: mms.TokenListReq
	(*CommentInfo)(nil),            // 30: mms.CommentInfo
	(*ReplyInfo)(nil),              // 31: mms.ReplyInfo
	(*MemberCommentResp)(nil),      // 32: mms.MemberCommentResp
	(*RegisterMemberRespData)(nil), // 33: mms.RegisterMemberRespData
	(*CommentInfoResp)(nil),        // 34: mms.CommentInfoResp
	(*CommentList)(nil),            // 35: mms.CommentList
	(*UsernameReq)(nil),            // 36: mms.UsernameReq
	(*OauthProviderListResp)(nil),  // 37: mms.OauthProviderListResp
	(*MemberInfo)(nil),             // 38: mms.MemberInfo
	(*RegisterMemberResp)(nil),     // 39: mms.RegisterMemberResp
	(*CommentIdReq)(nil),           // 40: mms.CommentIdReq
	(*MemberInfoResp)(nil),         // 41: mms.MemberInfoResp
	(*MemberInfoRespData)(nil),     // 42: mms.MemberInfoRespData
	(*IDReq)(nil),                  // 43: mms.IDReq
	(*PageInfoReq)(nil),            // 44: mms.PageInfoReq
}
var file_mms_proto_depIdxs = []int32{
	38, // 0: mms.SyncMemberResp.data:type_name -> mms.MemberInfo
	21, // 1: mms.CommentListResp.data:type_name -> mms.CommentListData
	11, // 2: mms.MemberRankListResp.data:type_name -> mms.MemberRankInfo
	3,  // 3: mms.TokenListResp.data:type_name -> mms.TokenInfo
	38, // 4: mms.MemberListResp.data:type_name -> mms.MemberInfo
	30, // 5: mms.CommentListData.data:type_name -> mms.CommentInfo
	31, // 6: mms.ReplyList.replyList:type_name -> mms.ReplyInfo
	31, // 7: mms.CommentInfo.reply:type_name -> mms.ReplyInfo
	30, // 8: mms.CommentInfoResp.data:type_name -> mms.CommentInfo
	30, // 9: mms.CommentList.list:type_name -> mms.CommentInfo
	24, // 10: mms.OauthProviderListResp.data:type_name -> mms.OauthProviderInfo
	33, // 11: mms.RegisterMemberResp.data:type_name -> mms.RegisterMemberRespData
	42, // 12: mms.MemberInfoResp.data:type_name -> mms.MemberInfoRespData
	38, // 13: mms.MemberInfoRespData.memberInfo:type_name -> mms.MemberInfo
	27, // 14: mms.Mms.initDatabase:input_type -> mms.Empty
	30, // 15: mms.Mms.memberComment:input_type -> mms.CommentInfo
	23, // 16: mms.Mms.memberGetCommentList:input_type -> mms.CommentListReq
	40, // 17: mms.Mms.memberGetComment:input_type -> mms.CommentIdReq
	31, // 18: mms.Mms.replyComment:input_type -> mms.ReplyInfo
	23, // 19: mms.Mms.adminGetCommentList:input_type -> mms.CommentListReq
	40, // 20: mms.Mms.adminGetComment:input_type -> mms.CommentIdReq
	8,  // 21: mms.Mms.adminGetReplyList:input_type -> mms.ReplyReq
	38, // 22: mms.Mms.createMember:input_type -> mms.MemberInfo
	38, // 23: mms.Mms.registerMember:input_type -> mms.MemberInfo
	38, // 24: mms.Mms.updateMember:input_type -> mms.MemberInfo
	20, // 25: mms.Mms.getMemberList:input_type -> mms.MemberListReq
	13, // 26: mms.Mms.deleteMember:input_type -> mms.UUIDsReq
	6,  // 27: mms.Mms.getMemberById:input_type -> mms.UUIDReq
	36, // 28: mms.Mms.getMemberByUsername:input_type -> mms.UsernameReq
	27, // 29: mms.Mms.getMember:input_type -> mms.Empty
	38, // 30: mms.Mms.updateMember2:input_type -> mms.MemberInfo
	10, // 31: mms.Mms.syncFirebaseMember:input_type -> mms.SyncMemberReq
	6,  // 32: mms.Mms.getMemberByForeinId:input_type -> mms.UUIDReq
	6,  // 33: mms.Mms.getMemberByForeinId2:input_type -> mms.UUIDReq
	11, // 34: mms.Mms.createMemberRank:input_type -> mms.MemberRankInfo
	11, // 35: mms.Mms.updateMemberRank:input_type -> mms.MemberRankInfo
	16, // 36: mms.Mms.getMemberRankList:input_type -> mms.MemberRankListReq
	43, // 37: mms.Mms.getMemberRankById:input_type -> mms.IDReq
	12, // 38: mms.Mms.deleteMemberRank:input_type -> mms.IDsReq
	24, // 39: mms.Mms.createOauthProvider:input_type -> mms.OauthProviderInfo
	24, // 40: mms.Mms.updateOauthProvider:input_type -> mms.OauthProviderInfo
	2,  // 41: mms.Mms.getOauthProviderList:input_type -> mms.OauthProviderListReq
	43, // 42: mms.Mms.getOauthProviderById:input_type -> mms.IDReq
	12, // 43: mms.Mms.deleteOauthProvider:input_type -> mms.IDsReq
	26, // 44: mms.Mms.oauthLogin:input_type -> mms.OauthLoginReq
	25, // 45: mms.Mms.oauthCallback:input_type -> mms.CallbackReq
	26, // 46: mms.Mms.wechatMiniProgramLogin:input_type -> mms.OauthLoginReq
	3,  // 47: mms.Mms.createToken:input_type -> mms.TokenInfo
	13, // 48: mms.Mms.deleteToken:input_type -> mms.UUIDsReq
	29, // 49: mms.Mms.getTokenList:input_type -> mms.TokenListReq
	6,  // 50: mms.Mms.getTokenById:input_type -> mms.UUIDReq
	6,  // 51: mms.Mms.blockUserAllToken:input_type -> mms.UUIDReq
	3,  // 52: mms.Mms.updateToken:input_type -> mms.TokenInfo
	4,  // 53: mms.Mms.initDatabase:output_type -> mms.BaseResp
	32, // 54: mms.Mms.memberComment:output_type -> mms.MemberCommentResp
	5,  // 55: mms.Mms.memberGetCommentList:output_type -> mms.CommentListResp
	34, // 56: mms.Mms.memberGetComment:output_type -> mms.CommentInfoResp
	4,  // 57: mms.Mms.replyComment:output_type -> mms.BaseResp
	35, // 58: mms.Mms.adminGetCommentList:output_type -> mms.CommentList
	30, // 59: mms.Mms.adminGetComment:output_type -> mms.CommentInfo
	22, // 60: mms.Mms.adminGetReplyList:output_type -> mms.ReplyList
	28, // 61: mms.Mms.createMember:output_type -> mms.BaseUUIDResp
	39, // 62: mms.Mms.registerMember:output_type -> mms.RegisterMemberResp
	4,  // 63: mms.Mms.updateMember:output_type -> mms.BaseResp
	19, // 64: mms.Mms.getMemberList:output_type -> mms.MemberListResp
	4,  // 65: mms.Mms.deleteMember:output_type -> mms.BaseResp
	38, // 66: mms.Mms.getMemberById:output_type -> mms.MemberInfo
	38, // 67: mms.Mms.getMemberByUsername:output_type -> mms.MemberInfo
	41, // 68: mms.Mms.getMember:output_type -> mms.MemberInfoResp
	15, // 69: mms.Mms.updateMember2:output_type -> mms.UpdateMember2Resp
	1,  // 70: mms.Mms.syncFirebaseMember:output_type -> mms.SyncMemberResp
	38, // 71: mms.Mms.getMemberByForeinId:output_type -> mms.MemberInfo
	41, // 72: mms.Mms.getMemberByForeinId2:output_type -> mms.MemberInfoResp
	7,  // 73: mms.Mms.createMemberRank:output_type -> mms.BaseIDResp
	4,  // 74: mms.Mms.updateMemberRank:output_type -> mms.BaseResp
	14, // 75: mms.Mms.getMemberRankList:output_type -> mms.MemberRankListResp
	11, // 76: mms.Mms.getMemberRankById:output_type -> mms.MemberRankInfo
	4,  // 77: mms.Mms.deleteMemberRank:output_type -> mms.BaseResp
	7,  // 78: mms.Mms.createOauthProvider:output_type -> mms.BaseIDResp
	4,  // 79: mms.Mms.updateOauthProvider:output_type -> mms.BaseResp
	37, // 80: mms.Mms.getOauthProviderList:output_type -> mms.OauthProviderListResp
	24, // 81: mms.Mms.getOauthProviderById:output_type -> mms.OauthProviderInfo
	4,  // 82: mms.Mms.deleteOauthProvider:output_type -> mms.BaseResp
	17, // 83: mms.Mms.oauthLogin:output_type -> mms.OauthRedirectResp
	38, // 84: mms.Mms.oauthCallback:output_type -> mms.MemberInfo
	4,  // 85: mms.Mms.wechatMiniProgramLogin:output_type -> mms.BaseResp
	28, // 86: mms.Mms.createToken:output_type -> mms.BaseUUIDResp
	4,  // 87: mms.Mms.deleteToken:output_type -> mms.BaseResp
	18, // 88: mms.Mms.getTokenList:output_type -> mms.TokenListResp
	3,  // 89: mms.Mms.getTokenById:output_type -> mms.TokenInfo
	4,  // 90: mms.Mms.blockUserAllToken:output_type -> mms.BaseResp
	4,  // 91: mms.Mms.updateToken:output_type -> mms.BaseResp
	53, // [53:92] is the sub-list for method output_type
	14, // [14:53] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_mms_proto_init() }
func file_mms_proto_init() {
	if File_mms_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_mms_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemberRegisterReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mms_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncMemberResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mms_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OauthProviderListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mms_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TokenInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mms_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BaseResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mms_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommentListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mms_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UUIDReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mms_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BaseIDResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mms_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mms_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemberLoginResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mms_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncMemberReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mms_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemberRankInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mms_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IDsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mms_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UUIDsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mms_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemberRankListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mms_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMember2Resp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mms_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemberRankListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mms_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OauthRedirectResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mms_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TokenListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mms_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemberListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mms_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemberListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mms_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommentListData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mms_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplyList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mms_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommentListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mms_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OauthProviderInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mms_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CallbackReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mms_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OauthLoginReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mms_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mms_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BaseUUIDResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mms_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TokenListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mms_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommentInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mms_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplyInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mms_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemberCommentResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mms_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterMemberRespData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mms_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommentInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mms_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommentList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mms_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UsernameReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mms_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OauthProviderListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mms_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemberInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mms_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterMemberResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mms_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommentIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mms_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemberInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mms_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemberInfoRespData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mms_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IDReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mms_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PageInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_mms_proto_msgTypes[2].OneofWrappers = []interface{}{}
	file_mms_proto_msgTypes[3].OneofWrappers = []interface{}{}
	file_mms_proto_msgTypes[5].OneofWrappers = []interface{}{}
	file_mms_proto_msgTypes[8].OneofWrappers = []interface{}{}
	file_mms_proto_msgTypes[11].OneofWrappers = []interface{}{}
	file_mms_proto_msgTypes[16].OneofWrappers = []interface{}{}
	file_mms_proto_msgTypes[20].OneofWrappers = []interface{}{}
	file_mms_proto_msgTypes[22].OneofWrappers = []interface{}{}
	file_mms_proto_msgTypes[23].OneofWrappers = []interface{}{}
	file_mms_proto_msgTypes[24].OneofWrappers = []interface{}{}
	file_mms_proto_msgTypes[29].OneofWrappers = []interface{}{}
	file_mms_proto_msgTypes[30].OneofWrappers = []interface{}{}
	file_mms_proto_msgTypes[31].OneofWrappers = []interface{}{}
	file_mms_proto_msgTypes[34].OneofWrappers = []interface{}{}
	file_mms_proto_msgTypes[35].OneofWrappers = []interface{}{}
	file_mms_proto_msgTypes[38].OneofWrappers = []interface{}{}
	file_mms_proto_msgTypes[39].OneofWrappers = []interface{}{}
	file_mms_proto_msgTypes[40].OneofWrappers = []interface{}{}
	file_mms_proto_msgTypes[41].OneofWrappers = []interface{}{}
	file_mms_proto_msgTypes[42].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_mms_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   45,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_mms_proto_goTypes,
		DependencyIndexes: file_mms_proto_depIdxs,
		MessageInfos:      file_mms_proto_msgTypes,
	}.Build()
	File_mms_proto = out.File
	file_mms_proto_rawDesc = nil
	file_mms_proto_goTypes = nil
	file_mms_proto_depIdxs = nil
}
